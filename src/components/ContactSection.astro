---
// Contact section with form and social links
import type { ContactInfo } from '../types';
import { useTranslations } from '../i18n/ui';

interface ContactFormData {
  name: string;
  email: string;
  subject: string;
  message: string;
}

interface Props { lang?: string }
const { lang = 'es' } = Astro.props;
const t = useTranslations(lang as 'en' | 'es');

const contactInfo: ContactInfo = {
  email: 'maxsantana.dev@gmail.com',
  phone: '+54 9 264 445 3191',
  location: 'San Juan, Argentina',
  socialMedia: {
    github: 'https://github.com/MaxSantana92',
    linkedin: 'https://www.linkedin.com/in/santana-maximiliano/',
    /* twitter: 'https://twitter.com/maxsantana', */
    instagram: 'https://www.instagram.com/maxsantana_dev/'
  }
};

const socialLinks = [
  { name: 'GitHub', url: contactInfo.socialMedia.github, icon: 'github' },
  { name: 'LinkedIn', url: contactInfo.socialMedia.linkedin, icon: 'linkedin', isLocal: true },
  { name: 'Twitter', url: contactInfo.socialMedia.twitter, icon: 'twitter' },
  { name: 'Instagram', url: contactInfo.socialMedia.instagram, icon: 'instagram' }
];
---

<section id="contact" class="py-20 bg-white dark:bg-gray-900">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16 animate-on-scroll">
      <h2 class="text-3xl md:text-4xl font-bold text-primary-900 dark:text-white">{t('contact.heading')}</h2>
      <div class="mt-2 w-24 h-1 bg-accent-500 mx-auto rounded-full"></div>
      <p class="mt-4 text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
        {t('contact.lead')}
      </p>
    </div>
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
      <div class="bg-gray-50 dark:bg-gray-800 p-8 rounded-xl shadow-md animate-on-scroll">
        <h3 class="text-2xl font-semibold text-primary-900 dark:text-white mb-6">{t('contact.form.title')}</h3>
        
        <form id="contact-form" class="space-y-6" data-success-msg={t('contact.form.success')} action="https://formspree.io/f/xqadlnwo"
        method="POST">
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
            <div>
              <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">{t('contact.form.name')}</label>
              <input 
                type="text" 
                id="name" 
                name="name" 
                class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-accent-500" 
                required
              />
            </div>
            <div>
              <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">{t('contact.form.email')}</label>
              <input 
                type="email" 
                id="email" 
                name="email" 
                class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-accent-500" 
                required
              />
            </div>
          </div>
          
          <div>
            <label for="subject" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">{t('contact.form.subject')}</label>
            <input 
              type="text" 
              id="subject" 
              name="subject" 
              class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-accent-500" 
              required
            />
          </div>
          
          <div>
            <label for="message" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">{t('contact.form.message')}</label>
            <textarea 
              id="message" 
              name="message" 
              rows="5" 
              class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-accent-500"
              required
            ></textarea>
          </div>
          
          <button 
            type="submit" 
            class="w-full px-6 py-3 bg-gray-500 text-white font-medium rounded-lg transition-colors shadow-lg hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-accent-500"
          >
            {t('contact.form.submit')}
          </button>
        </form>
      </div>
      
      <div class="space-y-8 animate-on-scroll">
        <div>
          <h3 class="text-2xl font-semibold text-primary-900 dark:text-white mb-6">{t('contact.info.title')}</h3>
          
          <div class="space-y-4">
            <div class="flex items-start space-x-4">
              <div class="bg-accent-500/10 p-3 rounded-full text-accent-500">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M21.75 6.75v10.5a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0 1-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25m19.5 0v.243a2.25 2.25 0 0 1-1.07 1.916l-7.5 4.615a2.25 2.25 0 0 1-2.36 0L3.32 8.91a2.25 2.25 0 0 1-1.07-1.916V6.75" />
                </svg>
              </div>
              <div>
                <h4 class="text-lg font-medium text-primary-900 dark:text-white">{t('contact.info.email')}</h4>
                <a href={`mailto:${contactInfo.email}`} class="text-gray-600 dark:text-gray-400 hover:text-accent-500 dark:hover:text-accent-400">
                  {contactInfo.email}
                </a>
              </div>
            </div>
            
            <div class="flex items-start space-x-4">
              <div class="bg-accent-500/10 p-3 rounded-full text-accent-500">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z" />
                </svg>
              </div>
              <div>
                <h4 class="text-lg font-medium text-primary-900 dark:text-white">{t('contact.info.phone')}</h4>
                <a href={`tel:${contactInfo.phone}`} class="text-gray-600 dark:text-gray-400 hover:text-accent-500 dark:hover:text-accent-400">
                  {contactInfo.phone}
                </a>
              </div>
            </div>
            
            <div class="flex items-start space-x-4">
              <div class="bg-accent-500/10 p-3 rounded-full text-accent-500">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M15 10.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                  <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1 1 15 0Z" />
                </svg>
              </div>
              <div>
                <h4 class="text-lg font-medium text-primary-900 dark:text-white">{t('contact.info.location')}</h4>
                <p class="text-gray-600 dark:text-gray-400">
                  {contactInfo.location}<br />
                  {t('contact.info.remote')}
                </p>
              </div>
            </div>
          </div>
        </div>
        
        <div>
          <h3 class="text-2xl font-semibold text-primary-900 dark:text-white mb-6">{t('contact.connect.title')}</h3>
          
          <div class="flex space-x-4">
            {socialLinks.filter((l) => !!l.url).map((link) => (
              <a href={link.url} target="_blank" rel="noopener noreferrer" aria-label={link.name} class="bg-gray-100 dark:bg-gray-700 p-3 rounded-full text-gray-700 dark:text-gray-300 hover:bg-accent-500 hover:text-white transition-colors">
                {
                  !link.isLocal? <img src={`https://cdn.simpleicons.org/${link.icon}`} alt={link.name} class="w-6 h-6" />:
                  <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                    <path fill-rule="evenodd" d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z" clip-rule="evenodd"></path>
                  </svg>
                }
              </a>
            ))}
          </div>
        </div>
        
        <div class="bg-gradient-to-r from-primary-900 to-primary-700 p-8 rounded-xl text-white shadow-lg">
          <h3 class="text-xl font-semibold mb-4">{t('contact.cta.title')}</h3>
          <p class="mb-6 opacity-90">{t('contact.cta.body')}</p>
          <a 
            href="https://drive.google.com/file/d/1X7EQ6A3tmFDGG2uJ0BvQMbqrbPyWYtAh/view?usp=sharing"
            target="_blank" 
            class="inline-block px-6 py-3 bg-white text-primary-900 font-medium rounded-lg hover:bg-gray-100 transition-colors"
            download
          >
            {t('contact.cta.download')}
          </a>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Form submission handler
  const contactForm = document.getElementById('contact-form') as HTMLFormElement;
  
  contactForm?.addEventListener('submit', (e) => {
    e.preventDefault();
    
    // In a real implementation, you would send the form data to your backend
    // For demo purposes, we'll just show an alert
    const successMsg = contactForm.getAttribute('data-success-msg') || 'Message sent successfully!';
    alert(successMsg);
    
    // Reset the form
    contactForm.reset();
  });
</script>